/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[2]!./node_modules/nextra-theme-docs/style.css":
/*!******************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[2]!./node_modules/nextra-theme-docs/style.css ***!
  \******************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*! tailwindcss v2.2.4 | MIT License | https://tailwindcss.com*//*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */html{-moz-tab-size:4;-o-tab-size:4;tab-size:4;line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0;font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji}hr{height:0;color:inherit}abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}::-moz-focus-inner{border-style:none;padding:0}:-moz-focusring{outline:1px dotted ButtonText}:-moz-ui-invalid{box-shadow:none}legend{padding:0}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}button{background-color:transparent;background-image:none}fieldset,ol,ul{margin:0;padding:0}ol,ul{list-style:none}html{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5}body{font-family:inherit;line-height:inherit}*,:after,:before{box-sizing:border-box;border:0 solid}hr{border-top-width:1px}img{border-style:solid}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{opacity:1;color:#cbd5e0}input:-ms-input-placeholder,textarea:-ms-input-placeholder{opacity:1;color:#cbd5e0}input::-moz-placeholder, textarea::-moz-placeholder{opacity:1;color:#cbd5e0}input:-ms-input-placeholder, textarea:-ms-input-placeholder{opacity:1;color:#cbd5e0}input::placeholder,textarea::placeholder{opacity:1;color:#cbd5e0}[role=button],button{cursor:pointer}table{border-collapse:collapse}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}button,input,optgroup,select,textarea{padding:0;line-height:inherit;color:inherit}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}*,:after,:before{--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-border-opacity:1;border-color:rgba(237,242,247,var(--tw-border-opacity));--tw-shadow:0 0 transparent;--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(66,153,225,0.5);--tw-ring-offset-shadow:0 0 transparent;--tw-ring-shadow:0 0 transparent;--tw-blur:var(--tw-empty,/*!*/ /*!*/);--tw-brightness:var(--tw-empty,/*!*/ /*!*/);--tw-contrast:var(--tw-empty,/*!*/ /*!*/);--tw-grayscale:var(--tw-empty,/*!*/ /*!*/);--tw-hue-rotate:var(--tw-empty,/*!*/ /*!*/);--tw-invert:var(--tw-empty,/*!*/ /*!*/);--tw-saturate:var(--tw-empty,/*!*/ /*!*/);--tw-sepia:var(--tw-empty,/*!*/ /*!*/);--tw-drop-shadow:var(--tw-empty,/*!*/ /*!*/);--tw-filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);--tw-backdrop-blur:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-brightness:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-contrast:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-grayscale:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-hue-rotate:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-invert:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-opacity:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-saturate:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-sepia:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia)}html{-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;font-size:16px;font-feature-settings:\\\"rlig\\\" 1,\\\"calt\\\" 1,\\\"ss01\\\" 1;scroll-behavior:smooth}body{--tw-bg-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity))}.dark body{--tw-bg-opacity:1;background-color:rgba(17,17,17,var(--tw-bg-opacity));--tw-text-opacity:1;color:rgba(247,250,252,var(--tw-text-opacity))}h1{margin-top:.5rem;font-size:2.25rem;line-height:2.5rem;font-weight:700;letter-spacing:-.015em}h2{margin-top:2.5rem;font-size:1.875rem;line-height:2.25rem;font-weight:600;letter-spacing:-.015em;border-bottom-width:1px;padding-bottom:.25rem}.dark h2{--tw-border-opacity:1;border-color:rgba(26,32,44,var(--tw-border-opacity))}h3{margin-top:2rem;font-size:1.5rem;line-height:2rem;font-weight:600;letter-spacing:-.015em}h4{font-size:1.25rem}h4,h5{margin-top:2rem;line-height:1.75rem;font-weight:600;letter-spacing:-.015em}h5{font-size:1.125rem}h6{margin-top:2rem;font-size:1rem;line-height:1.5rem;font-weight:600;letter-spacing:-.015em}a{--tw-text-opacity:1;color:rgba(66,153,225,var(--tw-text-opacity));text-decoration:underline;text-underline-position:under}p{line-height:1.75rem}.table-container:not(:first-child),blockquote:not(:first-child),p:not(:first-child){margin-top:1.5rem}hr{margin-top:2rem;margin-bottom:2rem}.dark hr{--tw-border-opacity:1;border-color:rgba(26,32,44,var(--tw-border-opacity))}code{border-radius:.25rem;--tw-bg-opacity:1;background-color:rgba(160,174,192,var(--tw-bg-opacity));--tw-bg-opacity:0.25;color:rgba(45,55,72,var(--tw-text-opacity));-webkit-box-decoration-break:clone;box-decoration-break:clone}.dark code,code{--tw-text-opacity:1}.dark code{--tw-bg-opacity:1;background-color:rgba(45,55,72,var(--tw-bg-opacity));color:rgba(226,232,240,var(--tw-text-opacity))}pre{margin-top:1.5rem;margin-bottom:1rem;overflow-x:auto;border-radius:.5rem;--tw-bg-opacity:1;background-color:rgba(237,242,247,var(--tw-bg-opacity));padding:1rem}.dark pre{--tw-bg-opacity:1;background-color:rgba(45,55,72,var(--tw-bg-opacity))}pre code{display:inline-block;min-width:100%;border-radius:0;background-color:transparent;padding:0;font-size:.875rem;line-height:1.25rem;--tw-text-opacity:1;color:rgba(0,0,0,var(--tw-text-opacity))}a code{color:currentColor;text-decoration:none}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.sticky{position:-webkit-sticky;position:sticky}.right-0{right:0}.left-0{left:0}.top-0{top:0}.top-full{top:100%}.top-16{top:4rem}.z-10{z-index:10}.z-20{z-index:20}.-m-4{margin:-1rem}.m-0{margin:0}.-mx-6{margin-left:-1.5rem;margin-right:-1.5rem}.mx-auto{margin-left:auto;margin-right:auto}.mt-6{margin-top:1.5rem}.ml-2{margin-left:.5rem}.mr-2{margin-right:.5rem}.mr-1{margin-right:.25rem}.ml-1{margin-left:.25rem}.mt-24{margin-top:6rem}.mr-4{margin-right:1rem}.-mr-2{margin-right:-.5rem}.mt-1{margin-top:.25rem}.mb-4{margin-bottom:1rem}.block{display:block}.inline-block{display:inline-block}.inline{display:inline}.flex{display:flex}.inline-flex{display:inline-flex}.table{display:table}.hidden{display:none}.h-full{height:100%}.h-16{height:4rem}.h-screen{height:100vh}.max-h-\\\\[calc\\\\(100vh-4rem\\\\)\\\\]{max-height:calc(100vh - 4rem)}.w-full{width:100%}.w-64{width:16rem}.min-w-0{min-width:0}.max-w-full{max-width:100%}.max-w-screen-md{max-width:768px}.flex-1{flex:1 1}.flex-shrink-0{flex-shrink:0}.rotate-180{--tw-rotate:180deg}.rotate-180,.transform{transform:var(--tw-transform)}.cursor-pointer{cursor:pointer}.select-none{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.list-none{list-style-type:none}.appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.flex-row{flex-direction:row}.flex-col{flex-direction:column}.flex-col-reverse{flex-direction:column-reverse}.items-center{align-items:center}.justify-between{justify-content:space-between}.divide-y>:not([hidden])~:not([hidden]){--tw-divide-y-reverse:0;border-top-width:calc(1px*(1 - var(--tw-divide-y-reverse)));border-bottom-width:calc(1px*var(--tw-divide-y-reverse))}.overflow-hidden{overflow:hidden}.overflow-y-auto{overflow-y:auto}.overflow-x-hidden{overflow-x:hidden}.whitespace-nowrap{white-space:nowrap}.rounded-lg{border-radius:.5rem}.rounded{border-radius:.25rem}.border{border-width:1px}.border-b{border-bottom-width:1px}.border-gray-200{--tw-border-opacity:1;border-color:rgba(237,242,247,var(--tw-border-opacity))}.bg-orange-100{--tw-bg-opacity:1;background-color:rgba(255,250,240,var(--tw-bg-opacity))}.bg-red-200{--tw-bg-opacity:1;background-color:rgba(254,215,215,var(--tw-bg-opacity))}.bg-yellow-200{--tw-bg-opacity:1;background-color:rgba(254,252,191,var(--tw-bg-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity))}.bg-gray-100{--tw-bg-opacity:1;background-color:rgba(247,250,252,var(--tw-bg-opacity))}.bg-opacity-\\\\[\\\\.97\\\\]{--tw-bg-opacity:.97}.p-4{padding:1rem}.p-2{padding:.5rem}.p-0{padding:0}.py-2{padding-top:.5rem;padding-bottom:.5rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-1{padding-top:.25rem;padding-bottom:.25rem}.px-4{padding-left:1rem;padding-right:1rem}.px-3{padding-right:.75rem}.pl-3,.px-3{padding-left:.75rem}.pr-2{padding-right:.5rem}.pr-4{padding-right:1rem}.pt-16{padding-top:4rem}.pb-16{padding-bottom:4rem}.pt-4{padding-top:1rem}.pb-40{padding-bottom:10rem}.pl-4{padding-left:1rem}.pt-8{padding-top:2rem}.pb-10{padding-bottom:2.5rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-lg{font-size:1.125rem;line-height:1.75rem}.text-sm{font-size:.875rem;line-height:1.25rem}.font-medium{font-weight:500}.font-semibold{font-weight:600}.font-extrabold{font-weight:800}.font-normal{font-weight:400}.italic{font-style:italic}.leading-tight{line-height:1.25}.text-orange-800{--tw-text-opacity:1;color:rgba(156,66,33,var(--tw-text-opacity))}.text-red-900{--tw-text-opacity:1;color:rgba(116,42,42,var(--tw-text-opacity))}.text-yellow-900{--tw-text-opacity:1;color:rgba(116,66,16,var(--tw-text-opacity))}.text-gray-600{--tw-text-opacity:1;color:rgba(113,128,150,var(--tw-text-opacity))}.text-current{color:currentColor}.text-gray-500{--tw-text-opacity:1;color:rgba(160,174,192,var(--tw-text-opacity))}.text-gray-900{--tw-text-opacity:1;color:rgba(26,32,44,var(--tw-text-opacity))}.no-underline{text-decoration:none}.opacity-25{opacity:.25}.shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0,0,0,0.1),0 4px 6px -2px rgba(0,0,0,0.05)}.shadow-lg,.shadow-md{box-shadow:var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow)}.shadow-md{--tw-shadow:0 4px 6px -1px rgba(0,0,0,0.1),0 2px 4px -1px rgba(0,0,0,0.06)}.outline-none{outline:2px solid transparent;outline-offset:2px}.filter{filter:var(--tw-filter)}.main-container{min-height:100vh}.sidebar{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}@media (min-width:768px){.sidebar{border-right-width:1px}}.sidebar ul ul{position:relative;margin-left:1.25rem}.sidebar a:focus-visible,.sidebar button:focus-visible{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent)}.sidebar .active-anchor{font-weight:600;--tw-text-opacity:1;color:rgba(26,32,44,var(--tw-text-opacity))}.dark .sidebar .active-anchor{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity))}.sidebar li.active>a{--tw-bg-opacity:1;background-color:rgba(237,242,247,var(--tw-bg-opacity));font-weight:600;--tw-text-opacity:1;color:rgba(0,0,0,var(--tw-text-opacity))}.dark .sidebar li.active>a{--tw-bg-opacity:1;background-color:rgba(45,55,72,var(--tw-bg-opacity));--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity))}.sidebar a,.sidebar button{margin-top:.25rem;display:block;width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:.25rem;padding:.5rem;text-align:left;font-size:1rem;line-height:1.5rem;--tw-text-opacity:1;color:rgba(113,128,150,var(--tw-text-opacity));text-decoration:none;outline:2px solid transparent;outline-offset:2px;-webkit-tap-highlight-color:transparent;-webkit-touch-callout:none}.dark .sidebar a,.dark .sidebar button{--tw-text-opacity:1;color:rgba(160,174,192,var(--tw-text-opacity))}.sidebar a:hover,.sidebar button:hover{--tw-bg-opacity:1;background-color:rgba(247,250,252,var(--tw-bg-opacity));--tw-text-opacity:1;color:rgba(26,32,44,var(--tw-text-opacity))}.dark .sidebar a:hover,.dark .sidebar button:hover{--tw-bg-opacity:1;background-color:rgba(26,32,44,var(--tw-bg-opacity));--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity))}article ul{margin-left:1.5rem;margin-top:1.5rem;list-style-type:disc}article li{margin-top:.5rem}article ol{margin-left:1.5rem;margin-top:1.5rem;list-style-type:decimal}article blockquote{border-left-width:2px;--tw-border-opacity:1;border-color:rgba(226,232,240,var(--tw-border-opacity));padding-left:1.5rem;font-style:italic;--tw-text-opacity:1;color:rgba(74,85,104,var(--tw-text-opacity))}.dark article blockquote{--tw-border-opacity:1;border-color:rgba(74,85,104,var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(203,213,224,var(--tw-text-opacity))}.subheading-anchor{margin-top:-84px;display:inline-block;position:absolute;width:1px}.subheading-anchor+a:hover .anchor-icon{opacity:1}.anchor-icon{opacity:0;margin-left:.5rem;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;--tw-text-opacity:1;color:rgba(160,174,192,var(--tw-text-opacity))}.dark .anchor-icon{--tw-text-opacity:1;color:rgba(74,85,104,var(--tw-text-opacity))}h2 a{text-decoration:none}.nextra-container nav{box-shadow:0 2px 4px rgba(0,0,0,.02)}.nextra-container nav a:focus,.nextra-container nav a:focus-visible,.nextra-container nav summary:focus,.nextra-container nav summary:focus-visible{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;outline:2px solid transparent;outline-offset:2px}.nextra-container nav a:focus-visible,.nextra-container nav summary:focus-visible{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent)}.nextra-search input{--tw-border-opacity:1;border-color:rgba(226,232,240,var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(26,32,44,var(--tw-text-opacity))}.dark .nextra-search input{--tw-border-opacity:1;border-color:rgba(45,55,72,var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(17,17,17,var(--tw-bg-opacity));--tw-text-opacity:1;color:rgba(247,250,252,var(--tw-text-opacity))}.nextra-search input::-moz-placeholder{--tw-text-opacity:1;color:rgba(203,213,224,var(--tw-text-opacity))}.nextra-search input:-ms-input-placeholder{--tw-text-opacity:1;color:rgba(203,213,224,var(--tw-text-opacity))}.nextra-search input::placeholder{--tw-text-opacity:1;color:rgba(203,213,224,var(--tw-text-opacity))}.dark .nextra-search input::-moz-placeholder{--tw-text-opacity:1;color:rgba(74,85,104,var(--tw-text-opacity))}.dark .nextra-search input:-ms-input-placeholder{--tw-text-opacity:1;color:rgba(74,85,104,var(--tw-text-opacity))}.dark .nextra-search input::placeholder{--tw-text-opacity:1;color:rgba(74,85,104,var(--tw-text-opacity))}.nextra-search ul{list-style-type:none}.nextra-search ul>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgba(226,232,240,var(--tw-divide-opacity))}.nextra-search ul{overflow:hidden;border-radius:.25rem;border-width:1px;--tw-border-opacity:1;border-color:rgba(226,232,240,var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity));--tw-text-opacity:1;color:rgba(247,250,252,var(--tw-text-opacity));--tw-shadow:0 10px 15px -3px rgba(0,0,0,0.1),0 4px 6px -2px rgba(0,0,0,0.05);box-shadow:var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow)}.dark .nextra-search ul>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgba(74,85,104,var(--tw-divide-opacity))}.dark .nextra-search ul{--tw-border-opacity:1;border-color:rgba(74,85,104,var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(17,17,17,var(--tw-bg-opacity));--tw-text-opacity:1;color:rgba(247,250,252,var(--tw-text-opacity))}.nextra-search ul li{--tw-text-opacity:1;color:rgba(45,55,72,var(--tw-text-opacity))}.nextra-search ul a:focus li,.nextra-search ul li.active{--tw-bg-opacity:1;background-color:rgba(237,242,247,var(--tw-bg-opacity))}.dark .nextra-search ul li{--tw-text-opacity:1;color:rgba(226,232,240,var(--tw-text-opacity))}.dark .nextra-search ul a:focus li,.dark .nextra-search ul li.active{--tw-bg-opacity:1;background-color:rgba(45,55,72,var(--tw-bg-opacity))}.nextra-search ul li .highlight{--tw-bg-opacity:1;background-color:rgba(250,240,137,var(--tw-bg-opacity))}.dark .nextra-search ul li .highlight{--tw-bg-opacity:1;background-color:rgba(183,121,31,var(--tw-bg-opacity))}.search-overlay{position:fixed;top:0;bottom:0;left:0;right:0}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{-webkit-appearance:none}.nextra-search.nextra-stork ul{left:0;overflow:auto}@media (min-width:768px){.nextra-search.nextra-stork ul{left:-20rem;right:0}}.nextra-search.nextra-stork ul{max-height:min(calc(100vh - 80px),400px);max-width:min(calc(100vw - 2rem),calc(100% + 20rem));width:100vw}code{font-size:.9em;padding:2px .25em}.locale-switch summary::-webkit-details-marker{content:\\\"\\\";display:none}.locale-switch summary::marker{content:\\\"\\\";display:none}.locale-switch[open] summary:before{content:\\\" \\\";position:fixed;top:0;right:0;bottom:0;left:0;z-index:10;display:block;cursor:default;background:transparent}.locale-switch .locale-dropdown{position:absolute;z-index:11}table{padding:0}table tr{margin:0;border-top-width:1px;--tw-border-opacity:1;border-color:rgba(226,232,240,var(--tw-border-opacity));padding:0}.dark table tr{--tw-border-opacity:1;border-color:rgba(74,85,104,var(--tw-border-opacity))}table tr:nth-child(2n){--tw-bg-opacity:1;background-color:rgba(247,250,252,var(--tw-bg-opacity))}.dark table tr:nth-child(2n){--tw-bg-opacity:1;background-color:rgba(26,32,44,var(--tw-bg-opacity))}table tr th{font-weight:600}table tr td[align=center],table tr th[align=center]{text-align:center}table tr td[align=right],table tr th[align=right]{text-align:right}table tr td,table tr th{text-align:left;margin:0;border-width:1px;--tw-border-opacity:1;border-color:rgba(226,232,240,var(--tw-border-opacity));padding:.5rem 1rem}.dark table tr td,.dark table tr th{--tw-border-opacity:1;border-color:rgba(74,85,104,var(--tw-border-opacity))}.table-container{overflow:auto}.contains-task-list{margin-left:0;list-style-type:none}.contains-task-list input[type=checkbox]{margin-right:.25rem}pre .prism-code{--c-highlight:#cce0f5}.dark pre .prism-code{--c-highlight:#3d4b61}pre .prism-code .token.builtin,pre .prism-code .token.char,pre .prism-code .token.constant,pre .prism-code .token.plain{color:#000!important}.dark pre .prism-code .token.builtin,.dark pre .prism-code .token.char,.dark pre .prism-code .token.constant,.dark pre .prism-code .token.plain{color:#fff!important}pre .prism-code .token.attr-value,pre .prism-code .token.string,pre .prism-code .token.url{color:#028265!important}.dark pre .prism-code .token.attr-value,.dark pre .prism-code .token.string,.dark pre .prism-code .token.url{color:#20bb98!important}pre .prism-code .token.operator,pre .prism-code .token.punctuation{color:#333!important}.dark pre .prism-code .token.operator,.dark pre .prism-code .token.punctuation{color:#bbb!important}pre .prism-code .token.function,pre .prism-code .token.number,pre .prism-code .token.tag:not(.script){color:#0076ff!important}.dark pre .prism-code .token.function,.dark pre .prism-code .token.number,.dark pre .prism-code .token.tag:not(.script){color:#1e86ff!important}.nextra-container.rtl{direction:rtl}.nextra-container.rtl .sidebar ul ul{margin-right:1.25rem;margin-left:0}.nextra-container.rtl .sidebar a,.nextra-container.rtl .sidebar button{text-align:right}.nextra-container.rtl article blockquote{border-right-width:2px;border-left-width:0;padding-right:1.5rem;padding-left:0}@media (min-width:1280px){.nextra-container:not(.rtl):not(.page) article.docs-container{padding-right:2rem}.nextra-container.rtl:not(.page) .docs-container{padding-left:2rem}}@media (min-width:768px){.nextra-container:not(.page) article.docs-container .bleed.full{margin-left:calc(-50vw + 50% + 8rem);margin-right:calc(-50vw + 50% + 8rem)}.nextra-container.page article.docs-container .bleed.full{margin-left:calc(-50vw + 50%);margin-right:calc(-50vw + 50%)}}@media (min-width:1280px){.nextra-container:not(.rtl):not(.page) article.docs-container .bleed.full{margin-left:calc(50% - 50vw + 16rem);margin-right:calc(50% - 50vw)}.nextra-container.rtl:not(.page) .docs-container .bleed.full{margin-left:calc(50% - 50vw);margin-right:calc(50% - 50vw + 16rem)}.nextra-container.page .docs-container .bleed.full{margin-left:calc(50% - 50vw);margin-right:calc(50% - 50vw)}}.nextra-container.rtl code{direction:ltr}.nextra-container.rtl .anchor-icon{margin-left:0;margin-right:.5rem;display:inline-block}.nextra-container.rtl article ol,.nextra-container.rtl article ul{margin-left:0;margin-right:1.5rem}@media (min-width:768px){.nextra-container.rtl .sidebar{border-left-width:1px}}.hover\\\\:bg-gray-200:hover{--tw-bg-opacity:1;background-color:rgba(237,242,247,var(--tw-bg-opacity))}.hover\\\\:text-blue-600:hover{--tw-text-opacity:1;color:rgba(49,130,206,var(--tw-text-opacity))}.hover\\\\:text-gray-900:hover{--tw-text-opacity:1;color:rgba(26,32,44,var(--tw-text-opacity))}.hover\\\\:opacity-75:hover{opacity:.75}.focus\\\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\\\\:ring:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent)}.dark .dark\\\\:border-gray-700{--tw-border-opacity:1;border-color:rgba(74,85,104,var(--tw-border-opacity))}.dark .dark\\\\:border-gray-900{--tw-border-opacity:1;border-color:rgba(26,32,44,var(--tw-border-opacity))}.dark .dark\\\\:bg-orange-200{--tw-bg-opacity:1;background-color:rgba(254,235,200,var(--tw-bg-opacity))}.dark .dark\\\\:bg-red-600{--tw-bg-opacity:1;background-color:rgba(229,62,62,var(--tw-bg-opacity))}.dark .dark\\\\:bg-yellow-700{--tw-bg-opacity:1;background-color:rgba(183,121,31,var(--tw-bg-opacity))}.dark .dark\\\\:bg-dark{--tw-bg-opacity:1;background-color:rgba(17,17,17,var(--tw-bg-opacity))}.dark .dark\\\\:bg-gray-900{--tw-bg-opacity:1;background-color:rgba(26,32,44,var(--tw-bg-opacity))}.dark .dark\\\\:bg-opacity-10{--tw-bg-opacity:0.1}.dark .dark\\\\:bg-opacity-30{--tw-bg-opacity:0.3}.dark .dark\\\\:bg-opacity-100{--tw-bg-opacity:1}.dark .dark\\\\:text-orange-300{--tw-text-opacity:1;color:rgba(251,211,141,var(--tw-text-opacity))}.dark .dark\\\\:text-red-200{--tw-text-opacity:1;color:rgba(254,215,215,var(--tw-text-opacity))}.dark .dark\\\\:text-yellow-200{--tw-text-opacity:1;color:rgba(254,252,191,var(--tw-text-opacity))}.dark .dark\\\\:text-gray-100{--tw-text-opacity:1;color:rgba(247,250,252,var(--tw-text-opacity))}.dark .dark\\\\:hover\\\\:bg-gray-800:hover{--tw-bg-opacity:1;background-color:rgba(45,55,72,var(--tw-bg-opacity))}.dark .dark\\\\:hover\\\\:text-gray-100:hover{--tw-text-opacity:1;color:rgba(247,250,252,var(--tw-text-opacity))}@media (min-width:768px){.md\\\\:sticky{position:-webkit-sticky;position:sticky}.md\\\\:right-0{right:0}.md\\\\:-mx-8{margin-left:-2rem;margin-right:-2rem}.md\\\\:block{display:block}.md\\\\:inline-block{display:inline-block}.md\\\\:inline{display:inline}.md\\\\:hidden{display:none}.md\\\\:w-64{width:16rem}.md\\\\:w-auto{width:auto}.md\\\\:flex-row{flex-direction:row}.md\\\\:items-end{align-items:flex-end}.md\\\\:px-8{padding-left:2rem;padding-right:2rem}.md\\\\:pb-16{padding-bottom:4rem}}@media (min-width:1280px){.xl\\\\:block{display:block}}@media (min-width:1536px){.\\\\32xl\\\\:-mx-24{margin-left:-6rem;margin-right:-6rem}}\", \"\",{\"version\":3,\"sources\":[\"webpack://node_modules/nextra-theme-docs/style.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/*! tailwindcss v2.2.4 | MIT License | https://tailwindcss.com*//*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */html{-moz-tab-size:4;-o-tab-size:4;tab-size:4;line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0;font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji}hr{height:0;color:inherit}abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}::-moz-focus-inner{border-style:none;padding:0}:-moz-focusring{outline:1px dotted ButtonText}:-moz-ui-invalid{box-shadow:none}legend{padding:0}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}button{background-color:transparent;background-image:none}fieldset,ol,ul{margin:0;padding:0}ol,ul{list-style:none}html{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5}body{font-family:inherit;line-height:inherit}*,:after,:before{box-sizing:border-box;border:0 solid}hr{border-top-width:1px}img{border-style:solid}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{opacity:1;color:#cbd5e0}input:-ms-input-placeholder,textarea:-ms-input-placeholder{opacity:1;color:#cbd5e0}input::placeholder,textarea::placeholder{opacity:1;color:#cbd5e0}[role=button],button{cursor:pointer}table{border-collapse:collapse}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}button,input,optgroup,select,textarea{padding:0;line-height:inherit;color:inherit}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}*,:after,:before{--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-border-opacity:1;border-color:rgba(237,242,247,var(--tw-border-opacity));--tw-shadow:0 0 transparent;--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(66,153,225,0.5);--tw-ring-offset-shadow:0 0 transparent;--tw-ring-shadow:0 0 transparent;--tw-blur:var(--tw-empty,/*!*/ /*!*/);--tw-brightness:var(--tw-empty,/*!*/ /*!*/);--tw-contrast:var(--tw-empty,/*!*/ /*!*/);--tw-grayscale:var(--tw-empty,/*!*/ /*!*/);--tw-hue-rotate:var(--tw-empty,/*!*/ /*!*/);--tw-invert:var(--tw-empty,/*!*/ /*!*/);--tw-saturate:var(--tw-empty,/*!*/ /*!*/);--tw-sepia:var(--tw-empty,/*!*/ /*!*/);--tw-drop-shadow:var(--tw-empty,/*!*/ /*!*/);--tw-filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);--tw-backdrop-blur:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-brightness:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-contrast:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-grayscale:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-hue-rotate:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-invert:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-opacity:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-saturate:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-sepia:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia)}html{-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;font-size:16px;font-feature-settings:\\\"rlig\\\" 1,\\\"calt\\\" 1,\\\"ss01\\\" 1;scroll-behavior:smooth}body{--tw-bg-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity))}.dark body{--tw-bg-opacity:1;background-color:rgba(17,17,17,var(--tw-bg-opacity));--tw-text-opacity:1;color:rgba(247,250,252,var(--tw-text-opacity))}h1{margin-top:.5rem;font-size:2.25rem;line-height:2.5rem;font-weight:700;letter-spacing:-.015em}h2{margin-top:2.5rem;font-size:1.875rem;line-height:2.25rem;font-weight:600;letter-spacing:-.015em;border-bottom-width:1px;padding-bottom:.25rem}.dark h2{--tw-border-opacity:1;border-color:rgba(26,32,44,var(--tw-border-opacity))}h3{margin-top:2rem;font-size:1.5rem;line-height:2rem;font-weight:600;letter-spacing:-.015em}h4{font-size:1.25rem}h4,h5{margin-top:2rem;line-height:1.75rem;font-weight:600;letter-spacing:-.015em}h5{font-size:1.125rem}h6{margin-top:2rem;font-size:1rem;line-height:1.5rem;font-weight:600;letter-spacing:-.015em}a{--tw-text-opacity:1;color:rgba(66,153,225,var(--tw-text-opacity));text-decoration:underline;text-underline-position:under}p{line-height:1.75rem}.table-container:not(:first-child),blockquote:not(:first-child),p:not(:first-child){margin-top:1.5rem}hr{margin-top:2rem;margin-bottom:2rem}.dark hr{--tw-border-opacity:1;border-color:rgba(26,32,44,var(--tw-border-opacity))}code{border-radius:.25rem;--tw-bg-opacity:1;background-color:rgba(160,174,192,var(--tw-bg-opacity));--tw-bg-opacity:0.25;color:rgba(45,55,72,var(--tw-text-opacity));-webkit-box-decoration-break:clone;box-decoration-break:clone}.dark code,code{--tw-text-opacity:1}.dark code{--tw-bg-opacity:1;background-color:rgba(45,55,72,var(--tw-bg-opacity));color:rgba(226,232,240,var(--tw-text-opacity))}pre{margin-top:1.5rem;margin-bottom:1rem;overflow-x:auto;border-radius:.5rem;--tw-bg-opacity:1;background-color:rgba(237,242,247,var(--tw-bg-opacity));padding:1rem}.dark pre{--tw-bg-opacity:1;background-color:rgba(45,55,72,var(--tw-bg-opacity))}pre code{display:inline-block;min-width:100%;border-radius:0;background-color:transparent;padding:0;font-size:.875rem;line-height:1.25rem;--tw-text-opacity:1;color:rgba(0,0,0,var(--tw-text-opacity))}a code{color:currentColor;text-decoration:none}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.sticky{position:-webkit-sticky;position:sticky}.right-0{right:0}.left-0{left:0}.top-0{top:0}.top-full{top:100%}.top-16{top:4rem}.z-10{z-index:10}.z-20{z-index:20}.-m-4{margin:-1rem}.m-0{margin:0}.-mx-6{margin-left:-1.5rem;margin-right:-1.5rem}.mx-auto{margin-left:auto;margin-right:auto}.mt-6{margin-top:1.5rem}.ml-2{margin-left:.5rem}.mr-2{margin-right:.5rem}.mr-1{margin-right:.25rem}.ml-1{margin-left:.25rem}.mt-24{margin-top:6rem}.mr-4{margin-right:1rem}.-mr-2{margin-right:-.5rem}.mt-1{margin-top:.25rem}.mb-4{margin-bottom:1rem}.block{display:block}.inline-block{display:inline-block}.inline{display:inline}.flex{display:flex}.inline-flex{display:inline-flex}.table{display:table}.hidden{display:none}.h-full{height:100%}.h-16{height:4rem}.h-screen{height:100vh}.max-h-\\\\[calc\\\\(100vh-4rem\\\\)\\\\]{max-height:calc(100vh - 4rem)}.w-full{width:100%}.w-64{width:16rem}.min-w-0{min-width:0}.max-w-full{max-width:100%}.max-w-screen-md{max-width:768px}.flex-1{flex:1 1 0%}.flex-shrink-0{flex-shrink:0}.rotate-180{--tw-rotate:180deg}.rotate-180,.transform{transform:var(--tw-transform)}.cursor-pointer{cursor:pointer}.select-none{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.list-none{list-style-type:none}.appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.flex-row{flex-direction:row}.flex-col{flex-direction:column}.flex-col-reverse{flex-direction:column-reverse}.items-center{align-items:center}.justify-between{justify-content:space-between}.divide-y>:not([hidden])~:not([hidden]){--tw-divide-y-reverse:0;border-top-width:calc(1px*(1 - var(--tw-divide-y-reverse)));border-bottom-width:calc(1px*var(--tw-divide-y-reverse))}.overflow-hidden{overflow:hidden}.overflow-y-auto{overflow-y:auto}.overflow-x-hidden{overflow-x:hidden}.whitespace-nowrap{white-space:nowrap}.rounded-lg{border-radius:.5rem}.rounded{border-radius:.25rem}.border{border-width:1px}.border-b{border-bottom-width:1px}.border-gray-200{--tw-border-opacity:1;border-color:rgba(237,242,247,var(--tw-border-opacity))}.bg-orange-100{--tw-bg-opacity:1;background-color:rgba(255,250,240,var(--tw-bg-opacity))}.bg-red-200{--tw-bg-opacity:1;background-color:rgba(254,215,215,var(--tw-bg-opacity))}.bg-yellow-200{--tw-bg-opacity:1;background-color:rgba(254,252,191,var(--tw-bg-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity))}.bg-gray-100{--tw-bg-opacity:1;background-color:rgba(247,250,252,var(--tw-bg-opacity))}.bg-opacity-\\\\[\\\\.97\\\\]{--tw-bg-opacity:.97}.p-4{padding:1rem}.p-2{padding:.5rem}.p-0{padding:0}.py-2{padding-top:.5rem;padding-bottom:.5rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-1{padding-top:.25rem;padding-bottom:.25rem}.px-4{padding-left:1rem;padding-right:1rem}.px-3{padding-right:.75rem}.pl-3,.px-3{padding-left:.75rem}.pr-2{padding-right:.5rem}.pr-4{padding-right:1rem}.pt-16{padding-top:4rem}.pb-16{padding-bottom:4rem}.pt-4{padding-top:1rem}.pb-40{padding-bottom:10rem}.pl-4{padding-left:1rem}.pt-8{padding-top:2rem}.pb-10{padding-bottom:2.5rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-lg{font-size:1.125rem;line-height:1.75rem}.text-sm{font-size:.875rem;line-height:1.25rem}.font-medium{font-weight:500}.font-semibold{font-weight:600}.font-extrabold{font-weight:800}.font-normal{font-weight:400}.italic{font-style:italic}.leading-tight{line-height:1.25}.text-orange-800{--tw-text-opacity:1;color:rgba(156,66,33,var(--tw-text-opacity))}.text-red-900{--tw-text-opacity:1;color:rgba(116,42,42,var(--tw-text-opacity))}.text-yellow-900{--tw-text-opacity:1;color:rgba(116,66,16,var(--tw-text-opacity))}.text-gray-600{--tw-text-opacity:1;color:rgba(113,128,150,var(--tw-text-opacity))}.text-current{color:currentColor}.text-gray-500{--tw-text-opacity:1;color:rgba(160,174,192,var(--tw-text-opacity))}.text-gray-900{--tw-text-opacity:1;color:rgba(26,32,44,var(--tw-text-opacity))}.no-underline{text-decoration:none}.opacity-25{opacity:.25}.shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0,0,0,0.1),0 4px 6px -2px rgba(0,0,0,0.05)}.shadow-lg,.shadow-md{box-shadow:var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow)}.shadow-md{--tw-shadow:0 4px 6px -1px rgba(0,0,0,0.1),0 2px 4px -1px rgba(0,0,0,0.06)}.outline-none{outline:2px solid transparent;outline-offset:2px}.filter{filter:var(--tw-filter)}.main-container{min-height:100vh}.sidebar{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}@media (min-width:768px){.sidebar{border-right-width:1px}}.sidebar ul ul{position:relative;margin-left:1.25rem}.sidebar a:focus-visible,.sidebar button:focus-visible{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent)}.sidebar .active-anchor{font-weight:600;--tw-text-opacity:1;color:rgba(26,32,44,var(--tw-text-opacity))}.dark .sidebar .active-anchor{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity))}.sidebar li.active>a{--tw-bg-opacity:1;background-color:rgba(237,242,247,var(--tw-bg-opacity));font-weight:600;--tw-text-opacity:1;color:rgba(0,0,0,var(--tw-text-opacity))}.dark .sidebar li.active>a{--tw-bg-opacity:1;background-color:rgba(45,55,72,var(--tw-bg-opacity));--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity))}.sidebar a,.sidebar button{margin-top:.25rem;display:block;width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:.25rem;padding:.5rem;text-align:left;font-size:1rem;line-height:1.5rem;--tw-text-opacity:1;color:rgba(113,128,150,var(--tw-text-opacity));text-decoration:none;outline:2px solid transparent;outline-offset:2px;-webkit-tap-highlight-color:transparent;-webkit-touch-callout:none}.dark .sidebar a,.dark .sidebar button{--tw-text-opacity:1;color:rgba(160,174,192,var(--tw-text-opacity))}.sidebar a:hover,.sidebar button:hover{--tw-bg-opacity:1;background-color:rgba(247,250,252,var(--tw-bg-opacity));--tw-text-opacity:1;color:rgba(26,32,44,var(--tw-text-opacity))}.dark .sidebar a:hover,.dark .sidebar button:hover{--tw-bg-opacity:1;background-color:rgba(26,32,44,var(--tw-bg-opacity));--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity))}article ul{margin-left:1.5rem;margin-top:1.5rem;list-style-type:disc}article li{margin-top:.5rem}article ol{margin-left:1.5rem;margin-top:1.5rem;list-style-type:decimal}article blockquote{border-left-width:2px;--tw-border-opacity:1;border-color:rgba(226,232,240,var(--tw-border-opacity));padding-left:1.5rem;font-style:italic;--tw-text-opacity:1;color:rgba(74,85,104,var(--tw-text-opacity))}.dark article blockquote{--tw-border-opacity:1;border-color:rgba(74,85,104,var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(203,213,224,var(--tw-text-opacity))}.subheading-anchor{margin-top:-84px;display:inline-block;position:absolute;width:1px}.subheading-anchor+a:hover .anchor-icon{opacity:1}.anchor-icon{opacity:0;margin-left:.5rem;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;--tw-text-opacity:1;color:rgba(160,174,192,var(--tw-text-opacity))}.dark .anchor-icon{--tw-text-opacity:1;color:rgba(74,85,104,var(--tw-text-opacity))}h2 a{text-decoration:none}.nextra-container nav{box-shadow:0 2px 4px rgba(0,0,0,.02)}.nextra-container nav a:focus,.nextra-container nav a:focus-visible,.nextra-container nav summary:focus,.nextra-container nav summary:focus-visible{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;outline:2px solid transparent;outline-offset:2px}.nextra-container nav a:focus-visible,.nextra-container nav summary:focus-visible{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent)}.nextra-search input{--tw-border-opacity:1;border-color:rgba(226,232,240,var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(26,32,44,var(--tw-text-opacity))}.dark .nextra-search input{--tw-border-opacity:1;border-color:rgba(45,55,72,var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(17,17,17,var(--tw-bg-opacity));--tw-text-opacity:1;color:rgba(247,250,252,var(--tw-text-opacity))}.nextra-search input::-moz-placeholder{--tw-text-opacity:1;color:rgba(203,213,224,var(--tw-text-opacity))}.nextra-search input:-ms-input-placeholder{--tw-text-opacity:1;color:rgba(203,213,224,var(--tw-text-opacity))}.nextra-search input::placeholder{--tw-text-opacity:1;color:rgba(203,213,224,var(--tw-text-opacity))}.dark .nextra-search input::-moz-placeholder{--tw-text-opacity:1;color:rgba(74,85,104,var(--tw-text-opacity))}.dark .nextra-search input:-ms-input-placeholder{--tw-text-opacity:1;color:rgba(74,85,104,var(--tw-text-opacity))}.dark .nextra-search input::placeholder{--tw-text-opacity:1;color:rgba(74,85,104,var(--tw-text-opacity))}.nextra-search ul{list-style-type:none}.nextra-search ul>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgba(226,232,240,var(--tw-divide-opacity))}.nextra-search ul{overflow:hidden;border-radius:.25rem;border-width:1px;--tw-border-opacity:1;border-color:rgba(226,232,240,var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity));--tw-text-opacity:1;color:rgba(247,250,252,var(--tw-text-opacity));--tw-shadow:0 10px 15px -3px rgba(0,0,0,0.1),0 4px 6px -2px rgba(0,0,0,0.05);box-shadow:var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow)}.dark .nextra-search ul>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgba(74,85,104,var(--tw-divide-opacity))}.dark .nextra-search ul{--tw-border-opacity:1;border-color:rgba(74,85,104,var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(17,17,17,var(--tw-bg-opacity));--tw-text-opacity:1;color:rgba(247,250,252,var(--tw-text-opacity))}.nextra-search ul li{--tw-text-opacity:1;color:rgba(45,55,72,var(--tw-text-opacity))}.nextra-search ul a:focus li,.nextra-search ul li.active{--tw-bg-opacity:1;background-color:rgba(237,242,247,var(--tw-bg-opacity))}.dark .nextra-search ul li{--tw-text-opacity:1;color:rgba(226,232,240,var(--tw-text-opacity))}.dark .nextra-search ul a:focus li,.dark .nextra-search ul li.active{--tw-bg-opacity:1;background-color:rgba(45,55,72,var(--tw-bg-opacity))}.nextra-search ul li .highlight{--tw-bg-opacity:1;background-color:rgba(250,240,137,var(--tw-bg-opacity))}.dark .nextra-search ul li .highlight{--tw-bg-opacity:1;background-color:rgba(183,121,31,var(--tw-bg-opacity))}.search-overlay{position:fixed;top:0;bottom:0;left:0;right:0}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{-webkit-appearance:none}.nextra-search.nextra-stork ul{left:0;overflow:auto}@media (min-width:768px){.nextra-search.nextra-stork ul{left:-20rem;right:0}}.nextra-search.nextra-stork ul{max-height:min(calc(100vh - 80px),400px);max-width:min(calc(100vw - 2rem),calc(100% + 20rem));width:100vw}code{font-size:.9em;padding:2px .25em}.locale-switch summary::-webkit-details-marker{content:\\\"\\\";display:none}.locale-switch summary::marker{content:\\\"\\\";display:none}.locale-switch[open] summary:before{content:\\\" \\\";position:fixed;top:0;right:0;bottom:0;left:0;z-index:10;display:block;cursor:default;background:transparent}.locale-switch .locale-dropdown{position:absolute;z-index:11}table{padding:0}table tr{margin:0;border-top-width:1px;--tw-border-opacity:1;border-color:rgba(226,232,240,var(--tw-border-opacity));padding:0}.dark table tr{--tw-border-opacity:1;border-color:rgba(74,85,104,var(--tw-border-opacity))}table tr:nth-child(2n){--tw-bg-opacity:1;background-color:rgba(247,250,252,var(--tw-bg-opacity))}.dark table tr:nth-child(2n){--tw-bg-opacity:1;background-color:rgba(26,32,44,var(--tw-bg-opacity))}table tr th{font-weight:600}table tr td[align=center],table tr th[align=center]{text-align:center}table tr td[align=right],table tr th[align=right]{text-align:right}table tr td,table tr th{text-align:left;margin:0;border-width:1px;--tw-border-opacity:1;border-color:rgba(226,232,240,var(--tw-border-opacity));padding:.5rem 1rem}.dark table tr td,.dark table tr th{--tw-border-opacity:1;border-color:rgba(74,85,104,var(--tw-border-opacity))}.table-container{overflow:auto}.contains-task-list{margin-left:0;list-style-type:none}.contains-task-list input[type=checkbox]{margin-right:.25rem}pre .prism-code{--c-highlight:#cce0f5}.dark pre .prism-code{--c-highlight:#3d4b61}pre .prism-code .token.builtin,pre .prism-code .token.char,pre .prism-code .token.constant,pre .prism-code .token.plain{color:#000!important}.dark pre .prism-code .token.builtin,.dark pre .prism-code .token.char,.dark pre .prism-code .token.constant,.dark pre .prism-code .token.plain{color:#fff!important}pre .prism-code .token.attr-value,pre .prism-code .token.string,pre .prism-code .token.url{color:#028265!important}.dark pre .prism-code .token.attr-value,.dark pre .prism-code .token.string,.dark pre .prism-code .token.url{color:#20bb98!important}pre .prism-code .token.operator,pre .prism-code .token.punctuation{color:#333!important}.dark pre .prism-code .token.operator,.dark pre .prism-code .token.punctuation{color:#bbb!important}pre .prism-code .token.function,pre .prism-code .token.number,pre .prism-code .token.tag:not(.script){color:#0076ff!important}.dark pre .prism-code .token.function,.dark pre .prism-code .token.number,.dark pre .prism-code .token.tag:not(.script){color:#1e86ff!important}.nextra-container.rtl{direction:rtl}.nextra-container.rtl .sidebar ul ul{margin-right:1.25rem;margin-left:0}.nextra-container.rtl .sidebar a,.nextra-container.rtl .sidebar button{text-align:right}.nextra-container.rtl article blockquote{border-right-width:2px;border-left-width:0;padding-right:1.5rem;padding-left:0}@media (min-width:1280px){.nextra-container:not(.rtl):not(.page) article.docs-container{padding-right:2rem}.nextra-container.rtl:not(.page) .docs-container{padding-left:2rem}}@media (min-width:768px){.nextra-container:not(.page) article.docs-container .bleed.full{margin-left:calc(-50vw + 50% + 8rem);margin-right:calc(-50vw + 50% + 8rem)}.nextra-container.page article.docs-container .bleed.full{margin-left:calc(-50vw + 50%);margin-right:calc(-50vw + 50%)}}@media (min-width:1280px){.nextra-container:not(.rtl):not(.page) article.docs-container .bleed.full{margin-left:calc(50% - 50vw + 16rem);margin-right:calc(50% - 50vw)}.nextra-container.rtl:not(.page) .docs-container .bleed.full{margin-left:calc(50% - 50vw);margin-right:calc(50% - 50vw + 16rem)}.nextra-container.page .docs-container .bleed.full{margin-left:calc(50% - 50vw);margin-right:calc(50% - 50vw)}}.nextra-container.rtl code{direction:ltr}.nextra-container.rtl .anchor-icon{margin-left:0;margin-right:.5rem;display:inline-block}.nextra-container.rtl article ol,.nextra-container.rtl article ul{margin-left:0;margin-right:1.5rem}@media (min-width:768px){.nextra-container.rtl .sidebar{border-left-width:1px}}.hover\\\\:bg-gray-200:hover{--tw-bg-opacity:1;background-color:rgba(237,242,247,var(--tw-bg-opacity))}.hover\\\\:text-blue-600:hover{--tw-text-opacity:1;color:rgba(49,130,206,var(--tw-text-opacity))}.hover\\\\:text-gray-900:hover{--tw-text-opacity:1;color:rgba(26,32,44,var(--tw-text-opacity))}.hover\\\\:opacity-75:hover{opacity:.75}.focus\\\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\\\\:ring:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent)}.dark .dark\\\\:border-gray-700{--tw-border-opacity:1;border-color:rgba(74,85,104,var(--tw-border-opacity))}.dark .dark\\\\:border-gray-900{--tw-border-opacity:1;border-color:rgba(26,32,44,var(--tw-border-opacity))}.dark .dark\\\\:bg-orange-200{--tw-bg-opacity:1;background-color:rgba(254,235,200,var(--tw-bg-opacity))}.dark .dark\\\\:bg-red-600{--tw-bg-opacity:1;background-color:rgba(229,62,62,var(--tw-bg-opacity))}.dark .dark\\\\:bg-yellow-700{--tw-bg-opacity:1;background-color:rgba(183,121,31,var(--tw-bg-opacity))}.dark .dark\\\\:bg-dark{--tw-bg-opacity:1;background-color:rgba(17,17,17,var(--tw-bg-opacity))}.dark .dark\\\\:bg-gray-900{--tw-bg-opacity:1;background-color:rgba(26,32,44,var(--tw-bg-opacity))}.dark .dark\\\\:bg-opacity-10{--tw-bg-opacity:0.1}.dark .dark\\\\:bg-opacity-30{--tw-bg-opacity:0.3}.dark .dark\\\\:bg-opacity-100{--tw-bg-opacity:1}.dark .dark\\\\:text-orange-300{--tw-text-opacity:1;color:rgba(251,211,141,var(--tw-text-opacity))}.dark .dark\\\\:text-red-200{--tw-text-opacity:1;color:rgba(254,215,215,var(--tw-text-opacity))}.dark .dark\\\\:text-yellow-200{--tw-text-opacity:1;color:rgba(254,252,191,var(--tw-text-opacity))}.dark .dark\\\\:text-gray-100{--tw-text-opacity:1;color:rgba(247,250,252,var(--tw-text-opacity))}.dark .dark\\\\:hover\\\\:bg-gray-800:hover{--tw-bg-opacity:1;background-color:rgba(45,55,72,var(--tw-bg-opacity))}.dark .dark\\\\:hover\\\\:text-gray-100:hover{--tw-text-opacity:1;color:rgba(247,250,252,var(--tw-text-opacity))}@media (min-width:768px){.md\\\\:sticky{position:-webkit-sticky;position:sticky}.md\\\\:right-0{right:0}.md\\\\:-mx-8{margin-left:-2rem;margin-right:-2rem}.md\\\\:block{display:block}.md\\\\:inline-block{display:inline-block}.md\\\\:inline{display:inline}.md\\\\:hidden{display:none}.md\\\\:w-64{width:16rem}.md\\\\:w-auto{width:auto}.md\\\\:flex-row{flex-direction:row}.md\\\\:items-end{align-items:flex-end}.md\\\\:px-8{padding-left:2rem;padding-right:2rem}.md\\\\:pb-16{padding-bottom:4rem}}@media (min-width:1280px){.xl\\\\:block{display:block}}@media (min-width:1536px){.\\\\32xl\\\\:-mx-24{margin-left:-6rem;margin-right:-6rem}}\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[2]!./node_modules/nextra-theme-docs/style.css\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js ***!
  \************************************************************************************/
/***/ (function(module) {

"use strict";
eval("\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/ // css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function(useSourceMap) {\n    var list = [] // return the list of modules as css string\n    ;\n    list.toString = function toString() {\n        return this.map(function(item) {\n            var content = cssWithMappingToString(item, useSourceMap);\n            if (item[2]) {\n                return '@media '.concat(item[2], ' {').concat(content, '}');\n            }\n            return content;\n        }).join('');\n    } // import a list of modules into the list\n    ;\n    // eslint-disable-next-line func-names\n    list.i = function(modules, mediaQuery, dedupe) {\n        if (typeof modules === 'string') {\n            // eslint-disable-next-line no-param-reassign\n            modules = [\n                [\n                    null,\n                    modules,\n                    ''\n                ]\n            ];\n        }\n        var alreadyImportedModules = {};\n        if (dedupe) {\n            for(var i = 0; i < this.length; i++){\n                // eslint-disable-next-line prefer-destructuring\n                var id = this[i][0];\n                if (id != null) {\n                    alreadyImportedModules[id] = true;\n                }\n            }\n        }\n        for(var _i = 0; _i < modules.length; _i++){\n            var item = [].concat(modules[_i]);\n            if (dedupe && alreadyImportedModules[item[0]]) {\n                continue;\n            }\n            if (mediaQuery) {\n                if (!item[2]) {\n                    item[2] = mediaQuery;\n                } else {\n                    item[2] = ''.concat(mediaQuery, ' and ').concat(item[2]);\n                }\n            }\n            list.push(item);\n        }\n    };\n    return list;\n};\nfunction cssWithMappingToString(item, useSourceMap) {\n    var content = item[1] || '' // eslint-disable-next-line prefer-destructuring\n    ;\n    var cssMapping = item[3];\n    if (!cssMapping) {\n        return content;\n    }\n    if (useSourceMap && typeof btoa === 'function') {\n        var sourceMapping = toComment(cssMapping);\n        var sourceURLs = cssMapping.sources.map(function(source) {\n            return '/*# sourceURL='.concat(cssMapping.sourceRoot || '').concat(source, ' */');\n        });\n        return [\n            content\n        ].concat(sourceURLs).concat([\n            sourceMapping\n        ]).join('\\n');\n    }\n    return [\n        content\n    ].join('\\n');\n} // Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n    var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,'.concat(base64);\n    return '/*# '.concat(data, ' */');\n}\n\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9ydW50aW1lL2FwaS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxxQkFBcUI7QUFDekU7QUFDQTtBQUNBLFNBQVM7QUFDVCxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGlCQUFpQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixxQkFBcUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxjQUFjO0FBQ3JFO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvcnVudGltZS9hcGkuanM/Y2E0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovIC8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgbGlzdCA9IFtdIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgICA7XG4gICAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG4gICAgICAgICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICAgICAgICAgIHJldHVybiAnQG1lZGlhICcuY29uY2F0KGl0ZW1bMl0sICcgeycpLmNvbmNhdChjb250ZW50LCAnfScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgICAgIH0pLmpvaW4oJycpO1xuICAgIH0gLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgICA7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbiAgICBsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICAgICAgICBtb2R1bGVzID0gW1xuICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9kdWxlcyxcbiAgICAgICAgICAgICAgICAgICAgJydcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICBdO1xuICAgICAgICB9XG4gICAgICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgICAgIGlmIChkZWR1cGUpIHtcbiAgICAgICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgICAgICAgICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuICAgICAgICAgICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZm9yKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspe1xuICAgICAgICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfaV0pO1xuICAgICAgICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICAgICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgICAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpdGVtWzJdID0gJycuY29uY2F0KG1lZGlhUXVlcnksICcgYW5kICcpLmNvbmNhdChpdGVtWzJdKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBsaXN0O1xufTtcbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG4gICAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuICAgIDtcbiAgICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gICAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH1cbiAgICBpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuICAgICAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24oc291cmNlKSB7XG4gICAgICAgICAgICByZXR1cm4gJy8qIyBzb3VyY2VVUkw9Jy5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8ICcnKS5jb25jYXQoc291cmNlLCAnICovJyk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgY29udGVudFxuICAgICAgICBdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW1xuICAgICAgICAgICAgc291cmNlTWFwcGluZ1xuICAgICAgICBdKS5qb2luKCdcXG4nKTtcbiAgICB9XG4gICAgcmV0dXJuIFtcbiAgICAgICAgY29udGVudFxuICAgIF0uam9pbignXFxuJyk7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgICB2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnLmNvbmNhdChiYXNlNjQpO1xuICAgIHJldHVybiAnLyojICcuY29uY2F0KGRhdGEsICcgKi8nKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app! ***!
  \*******************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.js\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfYXBwJnBhZ2U9JTJGX2FwcCEuanMiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxnREFBeUI7QUFDaEQ7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzY3ODIiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9fYXBwXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL19hcHBcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!\n");

/***/ }),

/***/ "./node_modules/nextra-theme-docs/style.css":
/*!**************************************************!*\
  !*** ./node_modules/nextra-theme-docs/style.css ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! !../next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[1]!../next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[2]!./style.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[2]!./node_modules/nextra-theme-docs/style.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                // These elements should always exist. If they do not,\n                // this code should fail.\n                var anchorElement = document.querySelector('#__next_css__DO_NOT_USE__');\n                var parentNode = anchorElement.parentNode// Normally <head>\n                ;\n                // Each style tag should be placed right before our\n                // anchor. By inserting before and not after, we do not\n                // need to track the last inserted element.\n                parentNode.insertBefore(element, anchorElement);\n            };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === 'default') {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === 'default') {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[1]!../next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[2]!./style.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[2]!./node_modules/nextra-theme-docs/style.css\",\n      function () {\n        content = __webpack_require__(/*! !!../next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[1]!../next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[2]!./style.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[2]!./node_modules/nextra-theme-docs/style.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dHJhLXRoZW1lLWRvY3Mvc3R5bGUuY3NzLmpzIiwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyx1TUFBMkY7QUFDN0csMEJBQTBCLG1CQUFPLENBQUMsaWVBQW1OOztBQUVyUDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7QUFHQSxJQUFJLElBQVU7QUFDZCx5QkFBeUIsVUFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSSxpQkFBaUI7QUFDckIsTUFBTSxpZUFBbU47QUFDek47QUFDQSxrQkFBa0IsbUJBQU8sQ0FBQyxpZUFBbU47O0FBRTdPOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQixVQUFVOztBQUUxQjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUsVUFBVTtBQUNaO0FBQ0EsR0FBRztBQUNIOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0cmEtdGhlbWUtZG9jcy9zdHlsZS5jc3M/YWNlNSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtc3R5bGUtbG9hZGVyL3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzNdLm9uZU9mWzddLnVzZVsxXSEuLi9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1szXS5vbmVPZls3XS51c2VbMl0hLi9zdHlsZS5jc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgLy8gVGhlc2UgZWxlbWVudHMgc2hvdWxkIGFsd2F5cyBleGlzdC4gSWYgdGhleSBkbyBub3QsXG4gICAgICAgICAgICAgICAgLy8gdGhpcyBjb2RlIHNob3VsZCBmYWlsLlxuICAgICAgICAgICAgICAgIHZhciBhbmNob3JFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI19fbmV4dF9jc3NfX0RPX05PVF9VU0VfXycpO1xuICAgICAgICAgICAgICAgIHZhciBwYXJlbnROb2RlID0gYW5jaG9yRWxlbWVudC5wYXJlbnROb2RlLy8gTm9ybWFsbHkgPGhlYWQ+XG4gICAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgICAgIC8vIEVhY2ggc3R5bGUgdGFnIHNob3VsZCBiZSBwbGFjZWQgcmlnaHQgYmVmb3JlIG91clxuICAgICAgICAgICAgICAgIC8vIGFuY2hvci4gQnkgaW5zZXJ0aW5nIGJlZm9yZSBhbmQgbm90IGFmdGVyLCB3ZSBkbyBub3RcbiAgICAgICAgICAgICAgICAvLyBuZWVkIHRvIHRyYWNrIHRoZSBsYXN0IGluc2VydGVkIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgcGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZWxlbWVudCwgYW5jaG9yRWxlbWVudCk7XG4gICAgICAgICAgICB9O1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5pZiAobW9kdWxlLmhvdCkge1xuICBpZiAoIWNvbnRlbnQubG9jYWxzIHx8IG1vZHVsZS5ob3QuaW52YWxpZGF0ZSkge1xuICAgIHZhciBpc0VxdWFsTG9jYWxzID0gZnVuY3Rpb24gaXNFcXVhbExvY2FscyhhLCBiLCBpc05hbWVkRXhwb3J0KSB7XG4gICAgaWYgKCFhICYmIGIgfHwgYSAmJiAhYikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGxldCBwO1xuICAgIGZvcihwIGluIGEpe1xuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSAnZGVmYXVsdCcpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhW3BdICE9PSBiW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yKHAgaW4gYil7XG4gICAgICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09ICdkZWZhdWx0Jykge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFhW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59O1xuICAgIHZhciBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFxuICAgICAgXCIhIS4uL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbM10ub25lT2ZbN10udXNlWzFdIS4uL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzNdLm9uZU9mWzddLnVzZVsyXSEuL3N0eWxlLmNzc1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1szXS5vbmVPZls3XS51c2VbMV0hLi4vbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbM10ub25lT2ZbN10udXNlWzJdIS4vc3R5bGUuY3NzXCIpO1xuXG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAoIWlzRXF1YWxMb2NhbHMob2xkTG9jYWxzLCBjb250ZW50LmxvY2FscykpIHtcbiAgICAgICAgICAgICAgICBtb2R1bGUuaG90LmludmFsaWRhdGUoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgICAgICAgICAgIHVwZGF0ZShjb250ZW50KTtcbiAgICAgIH1cbiAgICApXG4gIH1cblxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7XG4gICAgdXBkYXRlKCk7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/nextra-theme-docs/style.css\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nconst isOldIE = function isOldIE() {\n    let memo;\n    return function memorize() {\n        if (typeof memo === 'undefined') {\n            // Test for IE <= 9 as proposed by Browserhacks\n            // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n            // Tests for existence of standard globals is to allow style-loader\n            // to operate correctly into non-standard environments\n            // @see https://github.com/webpack-contrib/style-loader/issues/177\n            memo = Boolean(window && document && document.all && !window.atob);\n        }\n        return memo;\n    };\n}();\nconst getTarget = function getTarget() {\n    const memo = {};\n    return function memorize(target) {\n        if (typeof memo[target] === 'undefined') {\n            let styleTarget = document.querySelector(target);\n            // Special case to return head of iframe instead of iframe itself\n            if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n                try {\n                    // This will throw an exception if access to iframe is blocked\n                    // due to cross-origin restrictions\n                    styleTarget = styleTarget.contentDocument.head;\n                } catch (e) {\n                    // istanbul ignore next\n                    styleTarget = null;\n                }\n            }\n            memo[target] = styleTarget;\n        }\n        return memo[target];\n    };\n}();\nconst stylesInDom = [];\nfunction getIndexByIdentifier(identifier) {\n    let result = -1;\n    for(let i = 0; i < stylesInDom.length; i++){\n        if (stylesInDom[i].identifier === identifier) {\n            result = i;\n            break;\n        }\n    }\n    return result;\n}\nfunction modulesToDom(list, options) {\n    const idCountMap = {};\n    const identifiers = [];\n    for(let i = 0; i < list.length; i++){\n        const item = list[i];\n        const id = options.base ? item[0] + options.base : item[0];\n        const count = idCountMap[id] || 0;\n        const identifier = id + ' ' + count.toString();\n        idCountMap[id] = count + 1;\n        const index = getIndexByIdentifier(identifier);\n        const obj = {\n            css: item[1],\n            media: item[2],\n            sourceMap: item[3]\n        };\n        if (index !== -1) {\n            stylesInDom[index].references++;\n            stylesInDom[index].updater(obj);\n        } else {\n            stylesInDom.push({\n                identifier: identifier,\n                updater: addStyle(obj, options),\n                references: 1\n            });\n        }\n        identifiers.push(identifier);\n    }\n    return identifiers;\n}\nfunction insertStyleElement(options) {\n    const style = document.createElement('style');\n    const attributes = options.attributes || {};\n    if (typeof attributes.nonce === 'undefined') {\n        const nonce = // eslint-disable-next-line no-undef\n         true ? __webpack_require__.nc : 0;\n        if (nonce) {\n            attributes.nonce = nonce;\n        }\n    }\n    Object.keys(attributes).forEach(function(key) {\n        style.setAttribute(key, attributes[key]);\n    });\n    if (typeof options.insert === 'function') {\n        options.insert(style);\n    } else {\n        const target = getTarget(options.insert || 'head');\n        if (!target) {\n            throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n        }\n        target.appendChild(style);\n    }\n    return style;\n}\nfunction removeStyleElement(style) {\n    // istanbul ignore if\n    if (style.parentNode === null) {\n        return false;\n    }\n    style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */ const replaceText = function replaceText() {\n    const textStore = [];\n    return function replace(index, replacement) {\n        textStore[index] = replacement;\n        return textStore.filter(Boolean).join('\\n');\n    };\n}();\nfunction applyToSingletonTag(style, index, remove, obj) {\n    const css = remove ? '' : obj.media ? '@media ' + obj.media + ' {' + obj.css + '}' : obj.css;\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = replaceText(index, css);\n    } else {\n        const cssNode = document.createTextNode(css);\n        const childNodes = style.childNodes;\n        if (childNodes[index]) {\n            style.removeChild(childNodes[index]);\n        }\n        if (childNodes.length) {\n            style.insertBefore(cssNode, childNodes[index]);\n        } else {\n            style.appendChild(cssNode);\n        }\n    }\n}\nfunction applyToTag(style, options, obj) {\n    let css = obj.css;\n    const media = obj.media;\n    const sourceMap = obj.sourceMap;\n    if (media) {\n        style.setAttribute('media', media);\n    } else {\n        style.removeAttribute('media');\n    }\n    if (sourceMap && typeof btoa !== 'undefined') {\n        css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */';\n    }\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n    } else {\n        while(style.firstChild){\n            style.removeChild(style.firstChild);\n        }\n        style.appendChild(document.createTextNode(css));\n    }\n}\nlet singleton = null;\nlet singletonCounter = 0;\nfunction addStyle(obj, options) {\n    let style;\n    let update;\n    let remove;\n    if (options.singleton) {\n        const styleIndex = singletonCounter++;\n        style = singleton || (singleton = insertStyleElement(options));\n        update = applyToSingletonTag.bind(null, style, styleIndex, false);\n        remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n    } else {\n        style = insertStyleElement(options);\n        update = applyToTag.bind(null, style, options);\n        remove = function() {\n            removeStyleElement(style);\n        };\n    }\n    update(obj);\n    return function updateStyle(newObj) {\n        if (newObj) {\n            if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n                return;\n            }\n            update(obj = newObj);\n        } else {\n            remove();\n        }\n    };\n}\nmodule.exports = function(list, options) {\n    options = options || {};\n    // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n    // tags it will allow on a page\n    if (!options.singleton && typeof options.singleton !== 'boolean') {\n        options.singleton = isOldIE();\n    }\n    list = list || [];\n    let lastIdentifiers = modulesToDom(list, options);\n    return function update(newList) {\n        newList = newList || [];\n        if (Object.prototype.toString.call(newList) !== '[object Array]') {\n            return;\n        }\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            stylesInDom[index].references--;\n        }\n        const newLastIdentifiers = modulesToDom(newList, options);\n        for(let i1 = 0; i1 < lastIdentifiers.length; i1++){\n            const identifier = lastIdentifiers[i1];\n            const index = getIndexByIdentifier(identifier);\n            if (stylesInDom[index].references === 0) {\n                stylesInDom[index].updater();\n                stylesInDom.splice(index, 1);\n            }\n        }\n        lastIdentifiers = newLastIdentifiers;\n    };\n};\n\n//# sourceMappingURL=injectStylesIntoStyleTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\n");

/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Nextra; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var nextra_theme_docs_style_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! nextra-theme-docs/style.css */ \"./node_modules/nextra-theme-docs/style.css\");\n/* harmony import */ var nextra_theme_docs_style_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(nextra_theme_docs_style_css__WEBPACK_IMPORTED_MODULE_1__);\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        });\n    }\n    return target;\n}\n\n\nfunction Nextra(param) {\n    var Component = param.Component, pageProps = param.pageProps;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: \"C:\\\\Users\\\\chris\\\\Documents\\\\GitHub\\\\kinetic-hosting-kb\\\\pages\\\\_app.js\",\n        lineNumber: 3,\n        columnNumber: 9\n    }, this);\n};\n_c = Nextra;\nvar _c;\n$RefreshReg$(_c, \"Nextra\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQW9DO0FBQ3JCLFNBQVNBLE1BQU0sQ0FBQyxLQUF3QixFQUFFO1FBQXhCQyxTQUFTLEdBQVgsS0FBd0IsQ0FBdEJBLFNBQVMsRUFBRUMsU0FBUyxHQUF0QixLQUF3QixDQUFYQSxTQUFTO0lBQ3BELHFCQUFPLDhEQUFDRCxTQUFTLG9CQUFLQyxTQUFTOzs7O1lBQUk7Q0FDbkM7QUFGdUJGLEtBQUFBLE1BQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvX2FwcC5qcz9lMGFkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnbmV4dHJhLXRoZW1lLWRvY3Mvc3R5bGUuY3NzJ1xyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBOZXh0cmEoeyBDb21wb25lbnQsIHBhZ2VQcm9wcyB9KSB7XHJcblx0cmV0dXJuIDxDb21wb25lbnQgey4uLnBhZ2VQcm9wc30gLz5cclxufSJdLCJuYW1lcyI6WyJOZXh0cmEiLCJDb21wb25lbnQiLCJwYWdlUHJvcHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/_app.js\n");

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\n// ATTENTION\n\nvar REACT_ELEMENT_TYPE =  Symbol.for('react.element');\nvar REACT_PORTAL_TYPE =  Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE =  Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE =  Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE =  Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE =  Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE =  Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE =  Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE =  Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE =  Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE =  Symbol.for('react.memo');\nvar REACT_LAZY_TYPE =  Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE =  Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL =  Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n");

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz81Nzc3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!"), __webpack_exec__("./node_modules/next/dist/client/router.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);